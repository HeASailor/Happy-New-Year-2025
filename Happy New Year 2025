<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Happy New Year 2025</title>
  <style>
    body {
      margin: 0;
      overflow: hidden; /* Hide scrollbars */
      background-color: black;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      color: purple;
      font-family: Arial, sans-serif;
    }
    .message {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 4em;
      z-index: 1;
    }
    canvas {
      position: absolute;
      top: 0;
      left: 0;
    }
  </style>
</head>
<body>
  <div class="message">Happy New Year 2025</div>
  <canvas id="canvas"></canvas>

  <script>
    const canvas = document.getElementById('canvas');
    const ctx = canvas.getContext('2d');
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    function random(min, max) {
      return Math.random() * (max - min) + min;
    }

    class Firework {
      constructor(x, y, targetX, targetY) {
        this.x = x;
        this.y = y;
        this.targetX = targetX;
        this.targetY = targetY;
        this.speed = 2;
        this.angle = Math.atan2(targetY - y, targetX - x);
        this.exploded = false;
      }

      update() {
        if (!this.exploded) {
          this.x += Math.cos(this.angle) * this.speed;
          this.y += Math.sin(this.angle) * this.speed;

          if (Math.hypot(this.x - this.targetX, this.y - this.targetY) < 5) {
            this.exploded = true;
            for (let i = 0; i < 100; i++) {
              particles.push(new Particle(this.targetX, this.targetY));
            }
          }
        }
      }

      draw() {
        if (!this.exploded) {
          ctx.beginPath();
          ctx.arc(this.x, this.y, 2, 0, Math.PI * 2);
          ctx.fillStyle = 'white';
          ctx.fill();
        }
      }
    }

    class Particle {
      constructor(x, y) {
        this.x = x;
        this.y = y;
        this.speed = random(1, 3);
        this.angle = random(0, Math.PI * 2);
        this.alpha = 1;
        this.decay = random(0.01, 0.03);
      }

      update() {
        this.x += Math.cos(this.angle) * this.speed;
        this.y += Math.sin(this.angle) * this.speed;
        this.alpha -= this.decay;

        if (this.alpha <= this.decay) {
          this.alpha = 0;
        }
      }

      draw() {
        ctx.save();
        ctx.globalAlpha = this.alpha;
        ctx.beginPath();
        ctx.arc(this.x, this.y, 2, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(255, 255, 255, ${this.alpha})`;
        ctx.fill();
        ctx.restore();
      }
    }

    const fireworks = [];
    const particles = [];

    function animate() {
      ctx.fillStyle = 'rgba(0, 0, 0, 0.1)';
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      if (Math.random() < 0.05) {
        fireworks.push(new Firework(
          canvas.width / 2,
          canvas.height,
          random(0, canvas.width),
          random(0, canvas.height / 2)
        ));
      }

      fireworks.forEach((firework, index) => {
        firework.update();
        firework.draw();
        if (firework.exploded) {
          fireworks.splice(index, 1);
        }
      });

      particles.forEach((particle, index) => {
        particle.update();
        particle.draw();
        if (particle.alpha <= 0) {
          particles.splice(index, 1);
        }
      });

      requestAnimationFrame(animate);
    }

    animate();
  </script>
</body>
</html>
